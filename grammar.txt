program    -> decl* EOF

decl       -> varDecl | statement
stmt       -> block | exprStmt | printStmt
           | ifStmt
block      -> "{" decl* "}"

ifStmt     -> "if" "(" expr ")" stmt ("else" statement)?
ifExpr     -> "if" "(" expr ")" expr ("else" expr)?

varDecl    -> "var" IDENTIFIER ("=" expr)? ";"

exprStmt   -> expr ';'
printStmt  -> "print" expr ";"

expression -> assign
assign     -> IDENTIFIER "=" expr assign | ifExpr
ifExpr     -> "if" "(" expr ")" logic_or "else" logic_or
logic_or   -> logic_and ("or" logic_and)*
logic_and  -> equality ("and" equality)*
equality   -> comparison ( ("!=" | "==") comparison )*
comparison -> term ( (">" | ">=" | "<" | "<=") term )*
term       -> factor ( ("-" | "+") factor )*
factor     -> power ( ("/" | "*") power )*
power      -> unary ( ("**") unary )*
unary      -> ( "!" | "-" ) unary | primary
primary    -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")"
